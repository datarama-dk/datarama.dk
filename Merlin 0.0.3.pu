%title Merlin 0.0.3
%date 2015-07-25
%subtitle Simple Constants

Aside from the numbers, Merlin has many types of values. A few
of them have straightforward translations to JavaScript, and this
revision focuses on adding them. I call them *simple constants* for
the purpose of the compiler; they're simple by the definition that
their data representations doesn't need any support beyond the 
corresponding ones of the target JS implementation.

The *nil value* (which, in Merlin, can be written as the empty 
list `()` or, synonymously, as the symbol ‚ä•) is arguably the
simplest of all values in the language. The only operation defined
on it is comparison. It serves as a list terminator (as in most 
Lisps), and is the only value that is considered Boolean false --- like
Arc, but unlike Scheme.  It's easily translated to JS `null`.

Strings (introduced in the 0.0.2 interpreter), are also trivially
translated to JS.

Given all the hacking I used to do on twiddling bits for dynamic 
type representation, this almost feels like cheating. I'm sure that
when things start getting more interesting and I have to start 
working around JS' demented type system, I'll miss those days of
bithacking and NaN-encoding tricks (and perhaps I'll need to do
something of the sort again if I end up making an optimizing version
of the compiler that spits out [asm.js](http://www.asmjs.org/)). 

Download
========
tar.gz: [merlin-0.0.3.tar.gz](files/merlin-0.0.3.tar.gz)  
MD5: `e15f9217fdee01fa3273d41c451b89b7`  
SHA256: `ac85405ccf6353cf9b412a804b808fa92e4618453c8f507d677967f3180a636d`
